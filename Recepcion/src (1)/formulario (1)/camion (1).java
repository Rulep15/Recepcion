/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import prgs.conexion;

/**
 *
 * @author utic
 */
public class camion extends javax.swing.JFrame {
  conexion  miconex = new conexion();
  javax.swing.table.DefaultTableModel cursor;// se crea el cursor  
   
    public camion() {
        initComponents();
        this.setLocationRelativeTo(null);
        cursor = (javax.swing.table.DefaultTableModel)grilla_camion.getModel();      
        this.setLocationRelativeTo(null);//centrar 
        cargar_grilla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tx_motor = new javax.swing.JTextField();
        tx_id_cliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tx_codigo = new javax.swing.JTextField();
        tx_chapa = new javax.swing.JTextField();
        tx_chasis = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tx_caja = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tx_obs = new javax.swing.JTextField();
        tx_id_color = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tx_id_modelo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jb_cancelar = new javax.swing.JButton();
        jb_salir = new javax.swing.JButton();
        jb_grabar = new javax.swing.JButton();
        jb_editar = new javax.swing.JButton();
        jb_borrar = new javax.swing.JButton();
        jb_agregar = new javax.swing.JButton();
        tx_cliente = new javax.swing.JTextField();
        tx_color = new javax.swing.JTextField();
        tx_modelo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla_camion = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel6.setText("MOTOR");

        jLabel1.setText("CODIGO");

        tx_motor.setEnabled(false);
        tx_motor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_motorActionPerformed(evt);
            }
        });
        tx_motor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_motorKeyTyped(evt);
            }
        });

        tx_id_cliente.setEnabled(false);
        tx_id_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_id_clienteActionPerformed(evt);
            }
        });
        tx_id_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_id_clienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_id_clienteKeyTyped(evt);
            }
        });

        jLabel3.setText("CHAPA");

        jLabel2.setText("CLIENTE");

        tx_codigo.setEnabled(false);
        tx_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_codigoActionPerformed(evt);
            }
        });

        tx_chapa.setEnabled(false);
        tx_chapa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_chapaKeyTyped(evt);
            }
        });

        tx_chasis.setEnabled(false);
        tx_chasis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_chasisKeyTyped(evt);
            }
        });

        jLabel4.setText("CHASIS");

        jLabel7.setText("CAJA");

        tx_caja.setEnabled(false);
        tx_caja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_cajaActionPerformed(evt);
            }
        });
        tx_caja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_cajaKeyTyped(evt);
            }
        });

        jLabel8.setText("MODELO");

        tx_obs.setEnabled(false);
        tx_obs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_obsKeyTyped(evt);
            }
        });

        tx_id_color.setEnabled(false);
        tx_id_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_id_colorActionPerformed(evt);
            }
        });
        tx_id_color.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_id_colorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_id_colorKeyTyped(evt);
            }
        });

        jLabel9.setText("COLOR");

        tx_id_modelo.setEnabled(false);
        tx_id_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_id_modeloActionPerformed(evt);
            }
        });
        tx_id_modelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_id_modeloKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tx_id_modeloKeyTyped(evt);
            }
        });

        jLabel10.setText("OBS");

        jb_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/cancelar.png"))); // NOI18N
        jb_cancelar.setText("CANCELAR");
        jb_cancelar.setEnabled(false);
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        jb_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/salir1 (1).png"))); // NOI18N
        jb_salir.setText("SALIR");
        jb_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_salirActionPerformed(evt);
            }
        });

        jb_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/guardar.png"))); // NOI18N
        jb_grabar.setText("GRABAR");
        jb_grabar.setEnabled(false);
        jb_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_grabarActionPerformed(evt);
            }
        });

        jb_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/editar.png"))); // NOI18N
        jb_editar.setText("EDITAR");
        jb_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_editarActionPerformed(evt);
            }
        });

        jb_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/borrar.png"))); // NOI18N
        jb_borrar.setText("BORRAR");
        jb_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_borrarActionPerformed(evt);
            }
        });

        jb_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graficos/agregar.png"))); // NOI18N
        jb_agregar.setText("AGREGAR");
        jb_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_agregarActionPerformed(evt);
            }
        });

        tx_cliente.setEnabled(false);
        tx_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_clienteActionPerformed(evt);
            }
        });

        tx_color.setEnabled(false);
        tx_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_colorActionPerformed(evt);
            }
        });

        tx_modelo.setEnabled(false);
        tx_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_modeloActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CAMION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(216, 216, 216))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        grilla_camion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "CLIENTE", "CHAPA", "CHASIS", "MOTOR", "CAJA", "COLOR", "MODELO", "OBS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grilla_camion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tx_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_obs, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tx_id_modelo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tx_id_color, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tx_color)
                            .addComponent(tx_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tx_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_chapa, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_chasis, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_motor, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tx_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tx_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(jb_borrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_grabar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jb_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tx_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tx_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_chapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_chasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_motor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_caja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_id_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tx_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tx_id_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tx_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_obs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_codigoActionPerformed
        buscar_cod();
    }//GEN-LAST:event_tx_codigoActionPerformed

    private void tx_cajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_cajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_cajaActionPerformed

    private void tx_motorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_motorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_motorActionPerformed

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        des_text();
        hab_botones();
        clear_text();
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jb_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_salirActionPerformed
        dispose();
    }//GEN-LAST:event_jb_salirActionPerformed

    private void jb_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_grabarActionPerformed
        grabar();
        des_text();
        hab_botones();
        clear_text();
        cargar_grilla(); 
    }//GEN-LAST:event_jb_grabarActionPerformed

    private void jb_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_editarActionPerformed
       operacion= "editar";
       
       des_botones();
        
       this.tx_codigo.setEnabled(true);
       this.tx_codigo.requestFocus();
       
    }//GEN-LAST:event_jb_editarActionPerformed

    private void jb_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_agregarActionPerformed
       operacion= "agregar";
       generar_id();
       hab_text();
       des_botones();
       
    }//GEN-LAST:event_jb_agregarActionPerformed

    private void jb_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_borrarActionPerformed
       operacion="borrar";
       
       des_botones();
       
       this.tx_codigo.setEnabled(true);
       this.tx_codigo.requestFocus();
    }//GEN-LAST:event_jb_borrarActionPerformed

    private void tx_chapaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_chapaKeyTyped

    }//GEN-LAST:event_tx_chapaKeyTyped

    private void tx_chasisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_chasisKeyTyped

    }//GEN-LAST:event_tx_chasisKeyTyped

    private void tx_motorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_motorKeyTyped
  
    }//GEN-LAST:event_tx_motorKeyTyped

    private void tx_cajaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_cajaKeyTyped
   
    }//GEN-LAST:event_tx_cajaKeyTyped

    private void tx_obsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_obsKeyTyped

    }//GEN-LAST:event_tx_obsKeyTyped

    private void tx_id_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_clienteKeyTyped
         // validacion solo numeros
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) 
            
        {
            evt.consume();
        }
    }//GEN-LAST:event_tx_id_clienteKeyTyped

    private void tx_id_colorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_colorKeyTyped
          // validacion solo numeros
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) 
            
        {
            evt.consume();
        }
    }//GEN-LAST:event_tx_id_colorKeyTyped

    private void tx_id_modeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_modeloKeyTyped
          // validacion solo numeros
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) 
            
        {
            evt.consume();
        }
    }//GEN-LAST:event_tx_id_modeloKeyTyped

    private void tx_id_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_clienteKeyPressed
         //para llamar al buscador
        //JOptionPane.showMessageDialog(null, "codigo de la tecla presionada-->"+ evt.getKeyCode(), "Atencion", JOptionPane.ERROR_MESSAGE);
       
        if(evt.getKeyCode()==113) // F2
        { // presiona F2
            JTextField[] tfParam = new JTextField[2];

            tfParam[0] = this.tx_id_cliente;
            tfParam[1] = this.tx_cliente;

            String sql = "SELECT cli_id AS codigo,cli_nombre AS nombre FROM cliente WHERE  cli_nombre LIKE  ";
            Buscador pp = new Buscador(sql , new String[]{"Codigo", "Nombre"},2, tfParam);
            pp.setTitle("Buscar Nombre");
            pp.setVisible(true);
        }
    }//GEN-LAST:event_tx_id_clienteKeyPressed

    private void tx_id_colorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_colorKeyPressed
         //para llamar al buscador
        //JOptionPane.showMessageDialog(null, "codigo de la tecla presionada-->"+ evt.getKeyCode(), "Atencion", JOptionPane.ERROR_MESSAGE);
       
        if(evt.getKeyCode()==113) // F2
        { // presiona F2
            JTextField[] tfParam = new JTextField[2];

            tfParam[0] = this.tx_id_color;
            tfParam[1] = this.tx_color;

            String sql = "SELECT col_id AS codigo,col_descri AS color FROM color WHERE  col_descri LIKE  ";
            Buscador pp = new Buscador(sql , new String[]{"Codigo", "Color"},2, tfParam);
            pp.setTitle("Buscar Color");
            pp.setVisible(true);
        }
    }//GEN-LAST:event_tx_id_colorKeyPressed

    private void tx_id_modeloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_modeloKeyPressed
         //para llamar al buscador
        //JOptionPane.showMessageDialog(null, "codigo de la tecla presionada-->"+ evt.getKeyCode(), "Atencion", JOptionPane.ERROR_MESSAGE);
       
        if(evt.getKeyCode()==113) // F2
        { // presiona F2
            JTextField[] tfParam = new JTextField[2];

            tfParam[0] = this.tx_id_modelo;
            tfParam[1] = this.tx_modelo;

            String sql = "SELECT mod_id AS codigo,mod_descri AS modelo FROM modelo WHERE  mod_descri LIKE  ";
            Buscador pp = new Buscador(sql , new String[]{"Codigo", "Modelo"},2, tfParam);
            pp.setTitle("Buscar Modelo");
            pp.setVisible(true);
        }
    }//GEN-LAST:event_tx_id_modeloKeyPressed

    private void tx_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_clienteActionPerformed
       
    }//GEN-LAST:event_tx_clienteActionPerformed

    private void tx_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_colorActionPerformed
  
    }//GEN-LAST:event_tx_colorActionPerformed

    private void tx_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_modeloActionPerformed
  
    }//GEN-LAST:event_tx_modeloActionPerformed

    private void tx_id_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_id_clienteActionPerformed
        buscar_cliente();
    }//GEN-LAST:event_tx_id_clienteActionPerformed

    private void tx_id_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_id_colorActionPerformed
       buscar_color();
    }//GEN-LAST:event_tx_id_colorActionPerformed

    private void tx_id_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_id_modeloActionPerformed
        buscar_modelo();
    }//GEN-LAST:event_tx_id_modeloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(camion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(camion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(camion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(camion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new camion().setVisible(true);
            }
        });
    }
    //declarar mis variables
    //bandera para saber que operacion se esta realizando
      private String operacion= "";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable grilla_camion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_agregar;
    private javax.swing.JButton jb_borrar;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_editar;
    private javax.swing.JButton jb_grabar;
    private javax.swing.JButton jb_salir;
    private javax.swing.JTextField tx_caja;
    private javax.swing.JTextField tx_chapa;
    private javax.swing.JTextField tx_chasis;
    private javax.swing.JTextField tx_cliente;
    private javax.swing.JTextField tx_codigo;
    private javax.swing.JTextField tx_color;
    private javax.swing.JTextField tx_id_cliente;
    private javax.swing.JTextField tx_id_color;
    private javax.swing.JTextField tx_id_modelo;
    private javax.swing.JTextField tx_modelo;
    private javax.swing.JTextField tx_motor;
    private javax.swing.JTextField tx_obs;
    // End of variables declaration//GEN-END:variables
private void hab_text()
{
     this.tx_id_cliente.setEnabled(true);
     this.tx_chapa.setEnabled(true);
     this.tx_chasis.setEnabled(true);
     this.tx_motor.setEnabled(true);
     this.tx_caja.setEnabled(true);
     this.tx_id_color.setEnabled(true);
     this.tx_id_modelo.setEnabled(true);
     this.tx_obs.setEnabled(true);
     //habilta los demas text si hay
      this.tx_id_cliente.requestFocus();
}
private void des_text()
{
     this.tx_codigo.setEnabled(false);
     this.tx_id_cliente.setEnabled(false);
     this.tx_chapa.setEnabled(false);
     this.tx_chasis.setEnabled(false);
     this.tx_motor.setEnabled(false);
     this.tx_caja.setEnabled(false);
     this.tx_id_color.setEnabled(false);
     this.tx_id_modelo.setEnabled(false);
     this.tx_obs.setEnabled(false);
}

private void des_botones()
{
     this.jb_grabar.setEnabled(true);
     this.jb_editar.setEnabled(false);
     this.jb_borrar.setEnabled(false);
     this.jb_agregar.setEnabled(false);
     this.jb_cancelar.setEnabled(true);
     this.jb_salir.setEnabled(false);
              
}

private void hab_botones()
{
     this.jb_grabar.setEnabled(false);
     this.jb_editar.setEnabled(true);
     this.jb_borrar.setEnabled(true);
     this.jb_agregar.setEnabled(true);
     this.jb_cancelar.setEnabled(false);
     this.jb_salir.setEnabled(true);
}

private void clear_text()
{
    tx_codigo.setText("");
    tx_caja.setText(""); 
    tx_chapa.setText(""); 
    tx_cliente.setText(""); 
    tx_color.setText(""); 
    tx_id_cliente.setText(""); 
    tx_id_color.setText(""); 
    tx_id_modelo.setText(""); 
    tx_modelo.setText(""); 
    tx_motor.setText(""); 
    tx_obs.setText(""); 
    tx_chasis.setText("");
    
 }
private void generar_id()
   {     
       
        try 
        {
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.resultado = miconex.sentencia.executeQuery("SELECT IFNULL(MAX(cam_id),0) + 1  AS nuevo FROM camion");
            
            //etraer los datos de la variable
            while(miconex.resultado.next()==true)
            {
                this.tx_codigo.setText(miconex.resultado.getString("nuevo"));
            }
        } ///fin generar id
        catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   private void grabar()
   {            
        try {
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.sentencia.executeUpdate("INSERT INTO camion(cam_id,cam_chapa,cam_chasis,cam_caja,cam_obs,cam_nrmotor,cli_id,col_id,mod_id)VALUES("+this.tx_codigo.getText()+",'"+this.tx_chapa.getText()+"','"+this.tx_chasis.getText()+"','"+this.tx_caja.getText()+"','"+this.tx_obs.getText()+"',"+this.tx_motor.getText()+","+this.tx_id_cliente.getText()+","+this.tx_id_color.getText()+","+this.tx_id_modelo.getText()+")");
            
            JOptionPane.showMessageDialog(null, "El registro se ha insertado satisfactoriamente.", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);         
        } catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
  //ENVIAR UPDATE
        if(operacion.equals("editar")) 
        { 
           try 
            {
                miconex.sentencia = miconex.conexion.createStatement();
                miconex.sentencia.executeUpdate("UPDATE camion SET cam_chapa= '"+this.tx_chapa.getText()+"',cam_chasis='"+this.tx_chasis.getText()+"',cam_caja='"+this.tx_caja.getText()+"',cam_obs='"+this.tx_obs.getText()+"',cam_nrmotor="+this.tx_motor.getText()+",cli_id="+this.tx_id_cliente.getText()+",col_id="+this.tx_id_color.getText()+",mod_id="+this.tx_id_modelo.getText()+" WHERE cam_id="+this.tx_codigo.getText());
                //miconex.sentencia.executeUpdate("UPDATE marca SET mar_descri = '"+this.tx_marca.getText()+"' WHERE mar_id ="+this.tx_codigo.getText());

                JOptionPane.showMessageDialog(null, "El registro se ha modificado satisfactoriamente.", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);
            } 
            catch (SQLException ex)
            {
                Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
            }           
        } // fin editar
   
   }
    private void buscar_cod()
    { 
        try {
            boolean encontro = false;
            
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.resultado = miconex.sentencia.executeQuery("SELECT * FROM camion WHERE cam_id ="+this.tx_codigo.getText());
            
            //etraer los datos de la variable
            while(miconex.resultado.next()==true)
            {
                this.tx_id_cliente.setText(miconex.resultado.getString("cli_id"));
                this.tx_chapa.setText(miconex.resultado.getString("cam_chapa"));
                this.tx_chasis.setText(miconex.resultado.getString("cam_chasis"));
                this.tx_motor.setText(miconex.resultado.getString("cam_nrmotor"));
                this.tx_caja.setText(miconex.resultado.getString("cam_caja"));
                this.tx_id_color.setText(miconex.resultado.getString("col_id"));
                this.tx_id_modelo.setText(miconex.resultado.getString("mod_id"));
                this.tx_obs.setText(miconex.resultado.getString("cam_obs"));
                
                    
                encontro = true;
            }
            
            if(encontro==true)
            {
                if(operacion.equals("borrar"))
                {    
                    int respuesta = JOptionPane.showConfirmDialog(this,"Deseas Borrar el Registro?","Confirmar",JOptionPane.YES_NO_OPTION);
                    if(respuesta == JOptionPane.YES_OPTION)
                    {
                        //borrar
                        miconex.sentencia = miconex.conexion.createStatement();
                        miconex.sentencia.executeUpdate("DELETE FROM camion WHERE cam_id ="+this.tx_codigo.getText());

                        JOptionPane.showMessageDialog(null, "El registro se ha borrado satisfactoriamente.", "Demosys", JOptionPane.INFORMATION_MESSAGE);

                        hab_botones();
                        des_text();
                        clear_text();
                        cargar_grilla();
                    }
                    else
                    {
                        hab_botones();
                        des_text();
                        clear_text();

                        //this.btn_cancelar.doClick();
                    }
                }// fin borrar    
                
                //caso de editar
                 if(operacion.equals("editar"))
                 { 
                      //habilitar los text
                     this.tx_id_cliente.setEnabled(true);
                     this.tx_chapa.setEnabled(true);
                     this.tx_chasis.setEnabled(true);
                     this.tx_motor.setEnabled(true);
                     this.tx_caja.setEnabled(true);
                     this.tx_id_color.setEnabled(true);
                     this.tx_id_modelo.setEnabled(true);
                     this.tx_obs.setEnabled(true);
                     
                     
                     this.tx_id_cliente.requestFocus();
                 }
            } 
            else
            {
                JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
                this.tx_codigo.setText("");
                this.tx_codigo.requestFocus();
            }      
        } catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    private void buscar_cliente()
    { 
        boolean encontro = false;
         
        try {
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.resultado = miconex.sentencia.executeQuery("SELECT * FROM  cliente  WHERE cli_id = "+this.tx_id_cliente.getText());
            
            //etraer los datos de la variable
            while(miconex.resultado.next()==true)
            {
                this.tx_cliente.setText(miconex.resultado.getString("cli_nombre"));
                encontro = true;
            }
            
            if(encontro==false)
            {
                 JOptionPane.showMessageDialog(null, "No existe un registro con este codigo de Cliente!", "Atencion", JOptionPane.ERROR_MESSAGE);  
                  this.jb_grabar.setEnabled(false);
                  this.tx_id_cliente.setText("");
                  this.tx_id_cliente.requestFocus();
            } 
            else
            {
                this.jb_grabar.setEnabled(true);
            }    
            
        } catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void buscar_color()
    { 
        boolean encontro = false;
         
        try {
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.resultado = miconex.sentencia.executeQuery("SELECT * FROM  color  WHERE col_id = "+this.tx_id_color.getText());
            
            //etraer los datos de la variable
            while(miconex.resultado.next()==true)
            {
                this.tx_color.setText(miconex.resultado.getString("col_descri"));
                encontro = true;
            }
            
            if(encontro==false)
            {
                 JOptionPane.showMessageDialog(null, "No existe un registro con este codigo de Color!", "Atencion", JOptionPane.ERROR_MESSAGE);  
                  this.jb_grabar.setEnabled(false);
                  this.tx_id_color.setText("");
                  this.tx_id_color.requestFocus();
            } 
            else
            {
                this.jb_grabar.setEnabled(true);
            }    
            
        } catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void buscar_modelo()
    { 
        boolean encontro = false;
         
        try {
            miconex.sentencia = miconex.conexion.createStatement();
            miconex.resultado = miconex.sentencia.executeQuery("SELECT * FROM  modelo  WHERE mod_id = "+this.tx_id_modelo.getText());
            
            //etraer los datos de la variable
            while(miconex.resultado.next()==true)
            {
                this.tx_modelo.setText(miconex.resultado.getString("mod_descri"));
                encontro = true;
            }
            
            if(encontro==false)
            {
                 JOptionPane.showMessageDialog(null, "No existe un registro con este codigo de Modelo!", "Atencion", JOptionPane.ERROR_MESSAGE);  
                  this.jb_grabar.setEnabled(false);
                  this.tx_id_modelo.setText("");
                  this.tx_id_modelo.requestFocus();
            } 
            else
            {
                this.jb_grabar.setEnabled(true);
            }    
            
        } catch (SQLException ex) {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }

    
    }   
private void cargar_grilla()
   {
       limpiar_grilla();
       
       try 
        {
          miconex.sentencia = miconex.conexion.createStatement();
          miconex.resultado = miconex.sentencia.executeQuery("SELECT * FROM camion");
           //boolean encontro = false;
            
           //etraer los datos de la variable
           while(miconex.resultado.next()==true)
            {
               //tirar a la grilla 
               Object registro[] = new Object[] {miconex.resultado.getString("cam_id"),miconex.resultado.getString("cli_id"),miconex.resultado.getString("cam_chapa"),miconex.resultado.getString("cam_chasis"),miconex.resultado.getString("cam_nrmotor"),miconex.resultado.getString("cam_caja"),miconex.resultado.getString("col_id"),miconex.resultado.getString("mod_id"),miconex.resultado.getString("cam_obs")};
               cursor.addRow(registro);
            }
            
        } catch (SQLException ex) 
        {
            Logger.getLogger(camion.class.getName()).log(Level.SEVERE, null, ex);
        }
   }// fin carga grilla

  private void limpiar_grilla()
   { 
     for (int posic = grilla_camion.getRowCount() -1; posic >= 0; posic--)
     {
          cursor.removeRow(posic);
     }  
   }// fin limpiar grilla   

}



